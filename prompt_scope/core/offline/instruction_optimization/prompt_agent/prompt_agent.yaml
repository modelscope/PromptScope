# log prompts

forward_log_template:
  cn: |
    ---------------\t当前状态\t----------------
    当前提示:\n{cur_prompt}
    标签:  {labels}
    预测值:   {preds}
    正确数量: {correct}
    正确率:     {acc}
  en: |
    ---------------\tforward\t----------------
    cur_prompt:\n{cur_prompt}
    labels:  {labels}
    preds:   {preds}
    correct: {correct}
    acc:     {acc}


error_string_log_template:
  cn: |
    --------------\t错误情况\t-----------------
    {error_string}
  en: |
    --------------\terror_string\t-----------------
    {error_string}

correct_string_log_template:
  cn: |
    --------------\t正确情况\t-----------------
    {correct_string}
  en: |
    --------------\tcorrect_string\t-----------------
    {correct_string}

gradient_log_template:
  cn: |
    ---------------\t计算梯度\t----------------
    基于梯度的提示:\n{gradient_prompt}
    梯度:\n{gradient}

  en: |
    ---------------\tcal_gradient\t----------------
    gradient_prompt:\n{gradient_prompt}
    gradient:\n{gradient}

correct_gradient_log_template:
  cn: |
    --------------\t计算正确梯度\t----------------
    基于梯度的提示:\n{gradient_prompt}
    梯度:\n{gradient}
  en: |
    ---------------\tcal_correct_gradient\t----------------
    gradient_prompt:\n{gradient_prompt}
    gradient:\n{gradient}

optimize_log_template:
  cn: |
    -------------\t优化\t---------------
    用于优化的提示:\n{optimize_prompt}
    回答:\n{response}
    优化后的提示:\n{optimized_prompt}
  en: |
    -------------\toptimize\t---------------
    optimize_prompt:\n{optimize_prompt}
    response:\n{response}
    optimized_prompt:\n{optimized_prompt}

self_evaluate_log_template:
  cn: |
    -------------\t自我评估\t---------------
    自我评估提示:\n{self_eval_prompt}
    回答:\n{response}
    自我评估分数:\n{self_eval_score}
  en: |
    -------------\tself_eval\t---------------
    self_eval_prompt:\n{self_eval_prompt}
    response:\n{response}
    self_eval_score:\n{self_eval_score}

# These prompts are modified based on Automatic Prompt Optimization with "Gradient Descent" and Beam Search
# https://arxiv.org/abs/2305.03495

gradient_prompt_template:
  cn: |
    我正在为一个为特定任务设计的语言模型编写提示。

    我的当前提示是：

    {cur_prompt}

    但是这个提示错误地处理了以下示例：

    {example_string}

    对于每个错误的示例，逐步仔细检查每个问题和错误答案，提供全面且不同的理由，说明为什么该提示导致了错误答案。最后，根据所有这些理由，总结并列出所有可以改进该提示的方面。

  en: |
    I'm writing prompts for a language model designed for a task.

    My current prompt is:
    {cur_prompt}

    But this prompt gets the following examples wrong:
    {example_string}

    For each wrong example, carefully examine each question and wrong answer step by step, provide comprehensive and different reasons why the prompt leads to the wrong answer. At last, based on all these reasons, summarize and list all the aspects that can improve the prompt.

optimize_prompt_template:
  cn: |
    我正在为一个设计用于特定任务的语言模型编写提示。

    我的当前提示是：

    {cur_prompt}

    但是这个提示在以下示例中出错：

    {example_string}

    根据这些错误，当前提示的问题及其原因是：

    {gradient}

    这里有一个以前提示的列表，包括当前提示，每个提示都是从前面的提示修改而来的：

    {trajectory_prompts}

    基于以上信息，请根据以下指南编写 {steps_per_gradient} 个新提示：

    1. 新提示应该解决当前提示的问题。
    2. 新提示应该考虑提示列表，并基于当前提示进行演变。
    3. 每个新提示应以 <START> 和 <END> 包裹。
    新的提示是：

  en: |
    I'm writing prompts for a language model designed for a task.

    My current prompt is:
    {cur_prompt}

    But this prompt gets the following examples wrong:
    {example_string}

    Based on these errors, the problems with this prompt and the reasons are:
    {gradient}

    There are a list of former prompts including the current prompt, and each prompt is modified from its former prompts:
    {trajectory_prompts}

    Based on the above information, please write {steps_per_gradient} new prompts following these guidelines:
    1. The new prompts should solve the current prompt's problems.
    2. The new prompts should consider the list of prompts and evolve based on the current prompt.
    3. Each new prompt should be wrapped with <START> and <END>.

    The new prompts are:

example_template:
  cn: |
    <{index}>
    模型输入是：
    {question}

    模型的输出是：
    {response}

    正确的标签是：{label}
    模型的预测是：{prediction}.
  en: |
    <{index}>
    The model's input is:
    {question}

    The model's response is:
    {response}

    The correct label is: {label}
    The model's prediction is: {prediction}.

optimize_prompt_template_single:
  cn: |
    我正在为一个旨在执行特定任务的语言模型写提示。

    我的当前提示是：

    {cur_prompt}

    但是这个提示在以下示例上出错：

    {example_string}

    基于这些错误，当前提示的问题及其原因是：

    {gradient}

    这里有一个包括当前提示在内的前一个提示列表，每个提示都是根据其前一个提示进行修改的：

    {trajectory_prompts}

    根据以上信息，请写出一个新的提示，遵循以下指南：

    1. 新提示应解决当前提示的问题。
    2. 新提示应考虑提示列表，并在当前提示的基础上进行演变。
    3. 新提示应包裹在<START>和<END>之间。
    新的提示是：

  en: |
    I'm writing prompts for a language model designed for a task.

    My current prompt is:
    {cur_prompt}

    But this prompt gets the following examples wrong:
    {example_string}

    Based on these errors, the problems with this prompt and the reasons are:
    {gradient}

    There are a list of former prompts including the current prompt, and each prompt is modified from its former prompts:
    {trajectory_prompts}

    Based on the above information, please write 1 new prompt following these guidelines:
    1. The new prompt should solve the current prompt's problems.
    2. The new prompt should consider the list of prompts and evolve based on the current prompt.
    3. The new prompt should be wrapped with <START> and <END>.

    The new prompts is:

ascend_gradient_prompt_template:
  cn: |
    我正在为一个专门设计用于某项任务的语言模型编写提示。

    我当前的提示是：

    {cur_prompt}

    这个提示能正确处理以下示例：

    {example_string}

    对于每个示例，仔细检查每个问题和正确答案，逐步提供全面且不同的理由，说明为什么这个提示会导致正确答案。最后，根据所有这些理由，总结并列出可以改进提示的所有方面。

  en: |
    I'm writing prompts for a language model designed for a task.

    My current prompt is:
    {cur_prompt}

    This prompt gets the following examples correct:
    {example_string}

    For each example, carefully examine each question and correct answer step by step, provide comprehensive and different reasons why the prompt leads to the correct answer. At last, based on all these reasons, summarize and list all the aspects that can improve the prompt.

ascend_optimize_prompt_template:
  cn: |
    我正在为一个专门用于某个任务的语言模型编写提示。

    我当前的提示是：

    {cur_prompt}

    这个提示能够正确处理以下示例：

    {example_string}

    基于这些示例，这个提示的优势和原因是：

    {gradient}

    有一个前任提示列表，包括当前提示，每个提示都是从前一个提示修改而来的：

    {trajectory_prompts}

    根据以上信息，请写出 {steps_per_gradient} 个新的提示，遵循以下指导原则：

    1. 新的提示应该解决当前提示的问题。
    2. 新的提示应该考虑提示列表，并在当前提示的基础上演变。
    3. 每个新提示应使用 <START> 和 <END> 包裹。
    新的提示是：

  en: |
    I'm writing prompts for a language model designed for a task.

    My current prompt is:
    {cur_prompt}

    This prompt gets the following examples correct:
    {example_string}

    Based on these examples, the advantages of this prompt and the reasons are:
    {gradient}

    There are a list of former prompts including the current prompt, and each prompt is modified from its former prompts:
    {trajectory_prompts}

    Based on the above information, please write {steps_per_gradient} new prompts following these guidelines:
    1. The new prompts should solve the current prompt's problems.
    2. The new prompts should consider the list of prompts and evolve based on the current prompt.
    3. Each new prompt should be wrapped with <START> and <END>.

    The new prompts are:

ascend_optimize_prompt_template_single:
  cn: |
    我正在为一个设计用于特定任务的语言模型编写提示。

    我的当前提示是：

    {cur_prompt}

    这个提示能正确处理以下示例：

    {example_string}

    根据这些示例，这个提示的优点及其原因是：

    {gradient}

    这里有一系列之前的提示，包括当前提示，每个提示都是从其前面的提示修改而来的：

    {trajectory_prompts}

    根据上述信息，请依据以下指导方针撰写1个新提示：

    1. 新提示应解决当前提示的问题。
    2. 新提示应考虑提示列表，并基于当前提示进行演变。
    3. 每个新提示应以<START>和<END>包装。
    新提示是：

  en: |
    I'm writing prompts for a language model designed for a task.

    My current prompt is:
    {cur_prompt}

    This prompt gets the following examples correct:
    {example_string}

    Based on these examples, the advantages of this prompt and the reasons are:
    {gradient}

    There are a list of former prompts including the current prompt, and each prompt is modified from its former prompts:
    {trajectory_prompts}

    Based on the above information, please write 1 new prompts following these guidelines:
    1. The new prompts should solve the current prompt's problems.
    2. The new prompts should consider the list of prompts and evolve based on the current prompt.
    3. Each new prompt should be wrapped with <START> and <END>.

    The new prompts is: